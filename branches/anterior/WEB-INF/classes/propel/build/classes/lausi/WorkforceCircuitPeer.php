<?php

  // include base peer class
  require_once 'lausi/om/BaseWorkforceCircuitPeer.php';

  // include object class
  include_once 'lausi/WorkforceCircuit.php';


/**
 * Skeleton subclass for performing query and update operations on the 'lausi_workforceCircuit' table.
 *
 * 
 *
 * This class was autogenerated by Propel on:
 *
 * 03/27/08 13:57:36
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lausi
 */
class WorkforceCircuitPeer extends BaseWorkforceCircuitPeer {

	/**
	 * Crea una relacion entre workforce y circuit
	 * @param circuitId id de circuito
	 * @param workforce id de la fuerza de trabajo
	 * @return la relacion si fue exitosa, o false en caso de error
	 */
	public function create($circuitId,$workforceId) {
		
		$workforceCircuit = new WorkforceCircuit();
		$workforceCircuit->setCircuitId($circuitId);
		$workforceCircuit->setWorkforceId($workforceId);
		
		try {
			
			$workforceCircuit->save();
		}
		catch(PropelException $exp) {
			
			return false;
		}
		
		return $workforceCircuit;
		
	}
	
	/**
	 * Elimina una relacion entre circuito y workforce
	 * @param circuitId id de circuito
	 * @param workforce id de la fuerza de trabajo
	 * @return true si fue exitosa, o false en caso contrario
	 */
	public function delete($circuitId,$workforceId) {
	
		$criteria = new Criteria();
		$criteria->add(WorkforceCircuitPeer::CIRCUITID,$circuitId);
		$criteria->add(WorkforceCircuitPeer::WORKFORCEID,$workforceId);	

		$results = WorkforceCircuitPeer::doSelect($criteria);
		if (empty($results))
			return false;
		
		$relationship = $results[0];
		try {
			$relationship->delete();			
		}
		catch(PropelException $exp) {
			return false;
		}
		
		return true;
		
	}

} // WorkforceCircuitPeer
