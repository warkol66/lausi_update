<?php

require_once 'om/BaseTheme.php';


/**
 * Skeleton subclass for representing a row from the 'lausi_theme' table.
 *
 * Base de Motivos
 *
 * This class was autogenerated by Propel on:
 *
 * 03/28/08 09:59:17
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lausi
 */
class Theme extends BaseTheme {

        function getTypeName() {
                $type = $this->getType();
                switch ($type) {
                        case ThemePeer::TYPE_DOBLE: return "Doble";
                        case ThemePeer::TYPE_SEXTUPLE: return "SÃ©xtuple";
                }
                return "";
        }
        
        function activeToggle() {
                $this->setActive(!$this->getActive());
                $this->save();
        }

		/**
		 * Devuelve la fecha de finalizacion de un Motivo.
		 *
		 * @return string YYYY-MM-DD
		 *
		 */
		public function getEndDate() {

			$date = $this->getStartDate();

			ereg("([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})", $date, $splitDate);
			$year = $splitDate[1];
			$month = $splitDate[2];
			$day = $splitDate[3];

			$timestamp = mktime(0,0,0,$month,$day+$this->getDuration(),$year);
			return date('Y/m/d',$timestamp);

		}
		
		/**
		 * Devuelve la cantidad de afiches distribuidos de un cierto motivo.
		 *
		 * @return integer cantidad de afiches
		 */
		public function getSheetsDistributed() {
			//duplicador
			$duplicator = 1;
			$type = $this->getType();
			//regla de negocio, las motivos dobles tienen dos afiches, los sextuples 1.
			if ($type == ThemePeer::TYPE_DOBLE)
				$duplicator = 2;
			require_once('AdvertisementPeer.php');
			$count = AdvertisementPeer::getAllByThemeCount($this->getId());
			
			return $count * $duplicator;
			
		}
		
		public function getSheetsToBeDistributed() {
			
			$count = $this->getSheetsTotal() - $this->getSheetsDistributed();
			return $count;
		}
		
		/**
		 * Indica si el theme se encuentra vencido
		 *
		 */
		public function isDefeated() {
			
			$today = strtotime(date("Y-m-d"));
			$expiration = strtotime($this->getEndDate());
			
			if ($today >= $expiration)
				return true;
			
			return false;
		}
		
		public function isDouble() {
		 
			return ($this->getType() == ThemePeer::TYPE_DOBLE);
			
		}
		
		public function getAdvertisementsToBePublished($date,$circuitId = null) {
			
			$criteria = new Criteria();
			
			$criteria->addJoin(AdvertisementPeer::BILLBOARDID,BillboardPeer::ID,Criteria::LEFT_JOIN);
			$criteria->addJoin(BillboardPeer::ADDRESSID,AddressPeer::ID,Criteria::LEFT_JOIN);
			
			if ($circuitId != null)
				$criteria->add(AddressPeer::CIRCUITID,$circuitId);

			$criteria->add(AdvertisementPeer::PUBLISHDATE,$date);
			$criteria->add(AdvertisementPeer::THEMEID,$this->getId());
			
			return AdvertisementPeer::doSelect($criteria);
			
		}

} // Theme
