<?php

/**
 * Skeleton subclass for representing a row from the 'lausi_advertisement' table.
 *
 * Base de Avisos
 *
 * This class was autogenerated by Propel on:
 *
 * Thu Mar 27 13:43:49 2008
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lausi
 */
class Advertisement extends BaseAdvertisement {
		
	public function save(PropelPDO $con = null) {
		try {
			if ($this->validate()) { 
				parent::save($con);
				return true;
			} else {
				return false;
			}
		}
		catch (PropelException $exp) {
			if (ConfigModule::get("global","showPropelExceptions"))
				print_r($exp->getMessage());
			return false;
		}
	}
	
	public function validate() {
		$res = parent::validate();
		if (!$res)
			return $res;
		
		//la cartelera y el theme deben ser compatibles
		$billboard = $this->getBillboard();
		$theme = $this->getTheme();
		
		//verificamos si la cartelera y el motivo son compatibles
		if ($billboard->getType() != $theme->getType())
			return false;
			
		$id = $this->getId();
		if (empty($id))
			$id = null;
		//verificamos que no haya solapamiento.
		if (AdvertisementPeer::hasOverlapping($publishDate, $duration, $billboardId, $id))
	  		return false;	
			
		return true;
	}
	
	/**
	 * Devuelve la fecha de finalizacion de un Aviso.
	 *
	 * @param string $format, formato con el que se devuelve la fecha, cualquier 
	 * formato aceptado por DateTime::format(). Si se especifica null, se devuelve un DateTime.
	 * Por defecto es 'Y/m/d'
	 * 
	 * @return string o DateTime $date, fecha de finalizacion del aviso.
	 */
	public function getEndDate($format = 'Y/m/d') {
		$date = $this->getPublishDate(null);
		$date->modify('+'.$this->getDuration().'days');
		
		if ($format === null)
			return $date;
			
		return $date->format($format);
	}
	
	public function assignWorkforce($workforce) {
		$this->setWorkforce($workforce);
		try {
			$this->save();
		} catch (PropelException $exp) {
			return false;
		}
		
		return true;
	}
	
	public function clearWorkforce() {
		$this->setWorkforceId(0);
		try {
			$this->save();
		}
		catch (PropelException $exp) {
			return false;
		}
		
		return true;
	}

} // Advertisement
